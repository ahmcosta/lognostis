version: '2'
services:
  # MongoDB: https://hub.docker.com/_/mongo/
  mongodb:
    image: mongo:3
    volumes:
      - mongo_data:/data/db
    networks:
      - graylog-net

  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/6.x/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.6.1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    networks:
      - collector-net
      - graylog-net

  logstash:
    image: docker.elastic.co/logstash/logstash:6.6.1
    volumes:
      - /Users/ahmcosta/workspaces/graylog/config/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      # - /Users/ahmcosta/workspaces/graylog/config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      # - flog_logs:/var/log/flog
    ports:
      - 5044:5044
    networks:
      - collector-net

  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:2.5
    volumes:
      - graylog_journal:/usr/share/graylog/data/journal
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_WEB_ENDPOINT_URI=http://127.0.0.1:9000/api
    links:
      - mongodb:mongo
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 514:514
      # Syslog UDP
      - 514:514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
    networks:
      - graylog-net

  flog:
    image: my-flog-image
    volumes:
      - flog_logs:/var/log/flog
    # volumes:
    #   - flog_logs:/var/log/flog
    # command:
      # Options:
      #  -f, --format string      choose log format. ("apache_common"|"apache_combined"|"apache_error"|"rfc3164") (default "apache_common")
      #  -o, --output string      output filename. Path-like is allowed. (default "generated.log")
      #  -t, --type string        log output type. ("stdout"|"log"|"gz") (default "stdout")
      #  -n, --number integer     number of lines to generate.
      #  -b, --bytes integer      size of logs to generate (in bytes).
      #                           "bytes" will be ignored when "number" is set.
      #  -s, --sleep numeric      creation time interval for each log (in seconds). It does not actually sleep.
      #  -d, --delay numeric      delay log generation speed (in seconds).
      #  -p, --split-by integer   set the maximum number of lines or maximum size in bytes of a log file.
      #                           with "number" option, the logs will be split whenever the maximum number of lines is reached.
      #                           with "byte" option, the logs will be split whenever the maximum size in bytes is reached.
      #  -w, --overwrite          overwrite the existing log files.
      #  -l, --loop               loop output forever until killed.
      
      # - "-f apache_combined -t log -o /var/log/flog/dummy.log -l"
      # - "-l"

# Volumes for persisting data, see https://docs.docker.com/engine/admin/volumes/volumes/
volumes:
  mongo_data:
    driver: local
  es_data:
    driver: local
  logstash_data:
    driver: local
  graylog_journal:
    driver: local
  flog_logs:
    driver: local

networks:
  collector-net:
    driver: bridge
  graylog-net:
    driver: bridge
